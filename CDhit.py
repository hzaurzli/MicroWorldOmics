# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CDhit.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys,os
import time
from PyQt5 import QtCore, QtGui, QtWidgets, Qt
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from Bio import SeqIO
import psutil



class WorkThread(QThread):
    # 自定义信号对象
    trigger = pyqtSignal(str)

    def __int__(self):
        # 初始化函数
        super(WorkThread, self).__init__()

    def run(self):
        def check_process_running(process_name):  # 检查进程是否运行
            for process in psutil.process_iter(['name']):
                if process.info['name'] == process_name:
                    return True
            return False

        path = os.path.abspath('.')
        if '\\' in path:
            path = path.strip().split('\\')
            path = '/'.join(path)

        os.popen(path + r"/tools/cd-hit/cd-hit.exe -i %s -o %s -c %s -aL %s -aS %s"
                 % (fasta, out, sequence_identity, aL, aS))
        time.sleep(3)
        process_name = 'cd-hit.exe'

        while True:  # 判断 iqtree.exe 是否运行完成
            if check_process_running(process_name):
                print(f"The process {process_name} is running.")
                time.sleep(10)
                continue
            else:
                print(f"The process {process_name} is not running.")
                break

        self.trigger.emit('Finished!!!')


class CDhit_Form(QWidget):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.work = WorkThread()

    def setupUi(self, Clustal):
        Clustal.setObjectName("Clustal")
        Clustal.resize(702, 467)
        Clustal.setStyleSheet("background-image: url(./logo/backgroundpage.png)")
        self.label = QtWidgets.QLabel(Clustal)
        self.label.setGeometry(QtCore.QRect(230, 10, 241, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(19)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(Clustal)
        self.label_2.setGeometry(QtCore.QRect(50, 70, 161, 21))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_2.setObjectName("label_2")
        self.textBrowser_2 = QtWidgets.QTextBrowser(Clustal)
        self.textBrowser_2.setGeometry(QtCore.QRect(50, 100, 211, 31))
        self.textBrowser_2.setStyleSheet("background-image: url(./logo/white.png)")
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.label_3 = QtWidgets.QLabel(Clustal)
        self.label_3.setGeometry(QtCore.QRect(50, 170, 161, 21))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.textBrowser_3 = QtWidgets.QTextBrowser(Clustal)
        self.textBrowser_3.setGeometry(QtCore.QRect(50, 200, 211, 31))
        self.textBrowser_3.setStyleSheet("background-image: url(./logo/white.png)")
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.pushButton_2 = QtWidgets.QPushButton(Clustal)
        self.pushButton_2.setGeometry(QtCore.QRect(280, 100, 61, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(13)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(Clustal)
        self.pushButton_3.setGeometry(QtCore.QRect(280, 200, 61, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(13)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        self.textBrowser = QtWidgets.QTextBrowser(Clustal)
        self.textBrowser.setGeometry(QtCore.QRect(50, 310, 241, 111))
        self.textBrowser.setStyleSheet("background-image: url(./logo/white.png)")
        self.textBrowser.setObjectName("textBrowser")
        self.label_4 = QtWidgets.QLabel(Clustal)
        self.label_4.setGeometry(QtCore.QRect(120, 270, 101, 21))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(19)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.pushButton = QtWidgets.QPushButton(Clustal)
        self.pushButton.setGeometry(QtCore.QRect(560, 400, 81, 41))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(22)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-image: url(./logo/white.png)")
        self.pushButton.setObjectName("pushButton")
        self.label_8 = QtWidgets.QLabel(Clustal)
        self.label_8.setGeometry(QtCore.QRect(420, 69, 251, 21))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        font.setItalic(True)
        self.label_8.setFont(font)
        self.label_8.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(Clustal)
        self.label_9.setGeometry(QtCore.QRect(420, 160, 231, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        font.setItalic(True)
        self.label_9.setFont(font)
        self.label_9.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_9.setObjectName("label_9")
        self.textEdit_2 = QtWidgets.QTextEdit(Clustal)
        self.textEdit_2.setGeometry(QtCore.QRect(420, 100, 231, 31))
        self.textEdit_2.setStyleSheet("background-image: url(./logo/white.png)")
        self.textEdit_2.setObjectName("textEdit_2")
        self.textEdit_3 = QtWidgets.QTextEdit(Clustal)
        self.textEdit_3.setGeometry(QtCore.QRect(420, 220, 231, 31))
        self.textEdit_3.setStyleSheet("background-image: url(./logo/white.png)")
        self.textEdit_3.setObjectName("textEdit_3")
        self.label_10 = QtWidgets.QLabel(Clustal)
        self.label_10.setGeometry(QtCore.QRect(420, 270, 231, 61))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        font.setItalic(True)
        self.label_10.setFont(font)
        self.label_10.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_10.setObjectName("label_10")
        self.textEdit_4 = QtWidgets.QTextEdit(Clustal)
        self.textEdit_4.setGeometry(QtCore.QRect(420, 340, 231, 31))
        self.textEdit_4.setStyleSheet("background-image: url(./logo/white.png)")
        self.textEdit_4.setObjectName("textEdit_4")

        self.retranslateUi(Clustal)
        QtCore.QMetaObject.connectSlotsByName(Clustal)

        # button action
        self.pushButton.clicked.connect(self.calculation)
        self.pushButton_2.clicked.connect(self.read_file1)
        self.pushButton_3.clicked.connect(self.read_file2)

        self.textEdit_2.setPlaceholderText(" Default: 0.8")
        self.textEdit_3.setPlaceholderText(" Default: 0")
        self.textEdit_4.setPlaceholderText(" Default: 0")

    def retranslateUi(self, Clustal):
        _translate = QtCore.QCoreApplication.translate
        Clustal.setWindowTitle(_translate("Clustal", "CD-hit"))
        self.label.setText(_translate("Clustal", "CD-hit"))
        self.label_2.setText(_translate("Clustal", "Input fasta"))
        self.label_3.setText(_translate("Clustal", "Output file"))
        self.pushButton_2.setText(_translate("Clustal", "Choose"))
        self.pushButton_3.setText(_translate("Clustal", "Choose"))
        self.label_4.setText(_translate("Clustal", "Status"))
        self.pushButton.setText(_translate("Clustal", "Run"))
        self.label_8.setText(_translate("Clustal", "Sequence identity threshold"))
        self.label_9.setText(_translate("Clustal", "Alignment coverage\n"
"(longer sequence)"))
        self.label_10.setText(_translate("Clustal", "Alignment coverage\n"
"(shorter sequence)"))


    def read_file1(self):
        openfile_name = QtWidgets.QFileDialog.getOpenFileName(self, 'choose file', '')[0]
        print(openfile_name)
        self.textBrowser_2.setText(openfile_name)

    def read_file2(self):
        openfile_name = QtWidgets.QFileDialog.getSaveFileName(self, "choose file", "./")[0]
        print(openfile_name)
        self.textBrowser_3.setText(openfile_name)

    def finished(self, str):
        self.textBrowser.setText(str)

    def calculation(self):
        try:
            global fasta, out, path, sequence_identity, aL, aS
            fasta = self.textBrowser_2.toPlainText()
            out = self.textBrowser_3.toPlainText()
            path = os.path.dirname(out)

            def is_fasta(filename):
                with open(filename, "r") as handle:
                    fasta = SeqIO.parse(handle, "fasta")
                    return any(fasta)

            if 0 in [len(fasta), len(out)]:
                QMessageBox.warning(self, "warning", "Please add correct file path!", QMessageBox.Cancel)
            else:
                if is_fasta(fasta) == False:
                    QMessageBox.critical(self, "error", "Check fasta file format!")
                else:
                    self.textBrowser.setText('Running! please wait')
                    QApplication.processEvents()  # 逐条打印状态


                    try:
                        sequence_identity = str(self.textEdit_2.toPlainText())
                        if sequence_identity == '':
                            sequence_identity = 0.8
                        else:
                            sequence_identity = int(sequence_identity)
                    except:
                        sequence_identity = 0.8


                    try:
                        aL = str(self.textEdit_3.toPlainText())
                        if aL == '':
                            aL = 0
                        else:
                            aL = int(aL)
                    except:
                        aL = 0


                    try:
                        aS = str(self.textEdit_4.toPlainText())
                        if aS == '':
                            aS = 0
                        else:
                            aS = int(aS)
                    except:
                        aS = 0

                    # 启动线程, 运行 run 函数
                    self.work.start()
                    # 传送信号, 接受 run 函数执行完毕后的信号
                    self.work.trigger.connect(self.finished)

        except:
            QMessageBox.critical(self, "error", "Check fasta file format!")



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Clustal = QtWidgets.QWidget()
    ui = CDhit_Form()
    ui.setupUi(Clustal)
    Clustal.show()
    sys.exit(app.exec_())
