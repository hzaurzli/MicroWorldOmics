# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Dots_counting_V2.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys,os
from PyQt5 import QtCore, QtGui, QtWidgets, Qt
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
import cv2
import numpy as np
import pandas as pd
from sklearn.cluster import KMeans


class Dialog(QWidget):
    """对QDialog类重写，实现一些功能"""
    def closeEvent(self, event):
        """
        重写closeEvent方法，实现dialog窗体关闭时执行一些代码
        :param event: close()触发的事件
        :return: None
        """
        try:
            if os.path.exists(os.path.dirname(openfile_name) + '/tmp.jpg') == True:
                print(openfile_name)
                os.remove(os.path.dirname(openfile_name) + '/tmp.jpg')
            else:
                return None # 设置正常退出
        except:
            return None # 设置正常退出

class Dots_counting_V2_Form(QWidget):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(576, 500)
        Form.setWindowIcon(QIcon("./logo/logo.ico"))
        self.gridLayout_7 = QtWidgets.QGridLayout(Form)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.label_2 = QtWidgets.QLabel(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setMaximumSize(QtCore.QSize(300, 250))
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap("./logo/white.png"))
        self.label_2.setScaledContents(True)
        self.label_2.setObjectName("label_2")
        self.gridLayout_3.addWidget(self.label_2, 0, 0, 1, 1)
        self.gridLayout_7.addLayout(self.gridLayout_3, 0, 1, 1, 1)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setHorizontalSpacing(6)
        self.gridLayout.setVerticalSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.label = QtWidgets.QLabel(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setMaximumSize(QtCore.QSize(300, 250))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("./logo/white.png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.gridLayout_7.addLayout(self.gridLayout, 0, 0, 1, 1)
        self.gridLayout_4 = QtWidgets.QGridLayout()
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.textEdit_3 = QtWidgets.QTextEdit(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEdit_3.sizePolicy().hasHeightForWidth())
        self.textEdit_3.setSizePolicy(sizePolicy)
        self.textEdit_3.setMaximumSize(QtCore.QSize(16777215, 30))
        self.textEdit_3.setObjectName("textEdit_3")
        self.gridLayout_4.addWidget(self.textEdit_3, 1, 0, 1, 1)
        self.label_9 = QtWidgets.QLabel(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_9.sizePolicy().hasHeightForWidth())
        self.label_9.setSizePolicy(sizePolicy)
        self.label_9.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(15)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.gridLayout_4.addWidget(self.label_9, 6, 0, 1, 1)
        self.label_5 = QtWidgets.QLabel(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
        self.label_5.setSizePolicy(sizePolicy)
        self.label_5.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(15)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.gridLayout_4.addWidget(self.label_5, 0, 0, 1, 1)
        self.label_8 = QtWidgets.QLabel(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_8.sizePolicy().hasHeightForWidth())
        self.label_8.setSizePolicy(sizePolicy)
        self.label_8.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(15)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.gridLayout_4.addWidget(self.label_8, 4, 0, 1, 1)
        self.label_6 = QtWidgets.QLabel(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
        self.label_6.setSizePolicy(sizePolicy)
        self.label_6.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(15)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.gridLayout_4.addWidget(self.label_6, 2, 0, 1, 1)
        self.textEdit_4 = QtWidgets.QTextEdit(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEdit_4.sizePolicy().hasHeightForWidth())
        self.textEdit_4.setSizePolicy(sizePolicy)
        self.textEdit_4.setMaximumSize(QtCore.QSize(16777215, 30))
        self.textEdit_4.setObjectName("textEdit_4")
        self.gridLayout_4.addWidget(self.textEdit_4, 3, 0, 1, 1)
        self.textEdit_6 = QtWidgets.QTextEdit(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEdit_6.sizePolicy().hasHeightForWidth())
        self.textEdit_6.setSizePolicy(sizePolicy)
        self.textEdit_6.setMaximumSize(QtCore.QSize(16777215, 30))
        self.textEdit_6.setObjectName("textEdit_6")
        self.gridLayout_4.addWidget(self.textEdit_6, 5, 0, 1, 1)
        self.pushButton_3 = QtWidgets.QPushButton(Form)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(15)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setStyleSheet("background-image: url(./logo/white.png)")
        self.pushButton_3.setObjectName("pushButton_3")
        self.gridLayout_4.addWidget(self.pushButton_3, 8, 0, 1, 1)
        self.textEdit_7 = QtWidgets.QTextEdit(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEdit_7.sizePolicy().hasHeightForWidth())
        self.textEdit_7.setSizePolicy(sizePolicy)
        self.textEdit_7.setMaximumSize(QtCore.QSize(16777215, 30))
        self.textEdit_7.setObjectName("textEdit_7")
        self.gridLayout_4.addWidget(self.textEdit_7, 7, 0, 1, 1)
        self.gridLayout_7.addLayout(self.gridLayout_4, 1, 1, 1, 1)
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setVerticalSpacing(0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label_10 = QtWidgets.QLabel(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_10.sizePolicy().hasHeightForWidth())
        self.label_10.setSizePolicy(sizePolicy)
        self.label_10.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(15)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.gridLayout_2.addWidget(self.label_10, 6, 0, 1, 1)
        self.textEdit = QtWidgets.QTextEdit(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEdit.sizePolicy().hasHeightForWidth())
        self.textEdit.setSizePolicy(sizePolicy)
        self.textEdit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.textEdit.setObjectName("textEdit")
        self.gridLayout_2.addWidget(self.textEdit, 1, 0, 1, 1)
        self.label_4 = QtWidgets.QLabel(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_4.sizePolicy().hasHeightForWidth())
        self.label_4.setSizePolicy(sizePolicy)
        self.label_4.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(15)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.gridLayout_2.addWidget(self.label_4, 2, 0, 1, 1)
        self.textEdit_2 = QtWidgets.QTextEdit(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEdit_2.sizePolicy().hasHeightForWidth())
        self.textEdit_2.setSizePolicy(sizePolicy)
        self.textEdit_2.setMaximumSize(QtCore.QSize(16777215, 30))
        self.textEdit_2.setObjectName("textEdit_2")
        self.gridLayout_2.addWidget(self.textEdit_2, 3, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy)
        self.label_3.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(15)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.gridLayout_2.addWidget(self.label_3, 0, 0, 1, 1)
        self.textEdit_5 = QtWidgets.QTextEdit(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEdit_5.sizePolicy().hasHeightForWidth())
        self.textEdit_5.setSizePolicy(sizePolicy)
        self.textEdit_5.setMaximumSize(QtCore.QSize(16777215, 30))
        self.textEdit_5.setObjectName("textEdit_5")
        self.gridLayout_2.addWidget(self.textEdit_5, 5, 0, 1, 1)
        self.label_7 = QtWidgets.QLabel(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
        self.label_7.setSizePolicy(sizePolicy)
        self.label_7.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(15)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.gridLayout_2.addWidget(self.label_7, 4, 0, 1, 1)
        self.pushButton_1 = QtWidgets.QPushButton(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_1.sizePolicy().hasHeightForWidth())
        self.pushButton_1.setSizePolicy(sizePolicy)
        self.pushButton_1.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(15)
        self.pushButton_1.setFont(font)
        self.pushButton_1.setStyleSheet("background-image: url(./logo/white.png)")
        self.pushButton_1.setObjectName("pushButton_1")
        self.gridLayout_2.addWidget(self.pushButton_1, 8, 0, 1, 1)
        self.pushButton_2 = QtWidgets.QPushButton(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_2.sizePolicy().hasHeightForWidth())
        self.pushButton_2.setSizePolicy(sizePolicy)
        self.pushButton_2.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(15)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("background-image: url(./logo/white.png)")
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout_2.addWidget(self.pushButton_2, 9, 0, 1, 1)
        self.textEdit_8 = QtWidgets.QTextEdit(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEdit_8.sizePolicy().hasHeightForWidth())
        self.textEdit_8.setSizePolicy(sizePolicy)
        self.textEdit_8.setMaximumSize(QtCore.QSize(16777215, 30))
        self.textEdit_8.setObjectName("textEdit_8")
        self.gridLayout_2.addWidget(self.textEdit_8, 7, 0, 1, 1)
        self.gridLayout_7.addLayout(self.gridLayout_2, 1, 0, 1, 1)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

        # action
        self.pushButton_1.clicked.connect(self.myAddPic)
        self.pushButton_2.clicked.connect(self.myRemovePic)
        self.pushButton_3.clicked.connect(self.counting)
        # self.pushButton_3.clicked.connect(lambda: self.counting(openfile_name))  # 信号函数传参

        ## Default params
        self.textEdit.setPlaceholderText(" 3.5; step length")
        self.textEdit_2.setPlaceholderText(" 0.6; range 0-1")
        self.textEdit_3.setPlaceholderText(" 0.3; range 0-1")
        self.textEdit_4.setPlaceholderText(" 0.6; range 0-1")
        self.textEdit_5.setPlaceholderText(" 0; range 0-255")
        self.textEdit_6.setPlaceholderText(" 2; range > 0")
        self.textEdit_7.setPlaceholderText(" 100; range > 0")
        self.textEdit_8.setPlaceholderText(" channels: 1")

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Dots counting V2"))
        self.label_9.setText(_translate("Form", "MaxArea:"))
        self.label_5.setText(_translate("Form", "MinCircularity:"))
        self.label_8.setText(_translate("Form", "MinArea:"))
        self.label_6.setText(_translate("Form", "MinInertiaRatio:"))
        self.pushButton_3.setText(_translate("Form", "Counting"))
        self.label_10.setText(_translate("Form", "Number of channels"))
        self.label_4.setText(_translate("Form", "MinConvexity:"))
        self.label_3.setText(_translate("Form", "ThresholdStep:"))
        self.label_7.setText(_translate("Form", "BlobColor:"))
        self.pushButton_1.setText(_translate("Form", "Add figure"))
        self.pushButton_2.setText(_translate("Form", "Remove figure"))

    def myRemovePic(self):
        try:
            self.label.setPixmap(QPixmap("./logo/white.png"))
            self.label.setScaledContents(True)
            self.label_2.setPixmap(QPixmap("./logo/white.png"))
            self.label_2.setScaledContents(True)
            if os.path.exists(os.path.dirname(openfile_name) + '/tmp.jpg') == True:
                os.remove(os.path.dirname(openfile_name) + '/tmp.jpg')
        except:
            QMessageBox.critical(self, "Critical", "No figures!",
                                 QMessageBox.Yes | QMessageBox.No,
                                 QMessageBox.Yes)

    def myAddPic(self):
        global openfile_name
        openfile_name = QFileDialog.getOpenFileName(self, 'choose figures', '')[0]
        print(openfile_name)
        if openfile_name != '':
            self.label.setPixmap(QtGui.QPixmap(openfile_name))
            self.label.setScaledContents(True)
        else:
            self.label.setPixmap(QPixmap("./logo/white.png"))
            self.label.setScaledContents(True)

    def counting(self):

        def cv_show_image(name, img):
            cv2.namedWindow(name, 0)
            cv2.imshow(name, img)
            cv2.waitKey(0)
            cv2.destroyAllWindows()

        try:
            img0 = cv2.imread(openfile_name)
            res = cv2.resize(img0, (500, 500), interpolation=cv2.INTER_CUBIC)
            gray = cv2.cvtColor(res, cv2.COLOR_BGR2GRAY)
            gauss = cv2.GaussianBlur(gray, (9, 9), 0)

            params = cv2.SimpleBlobDetector_Params()
            # parameter
            params.minThreshold = 100
            params.maxThreshold = 255
            try:
                params.thresholdStep = float(self.textEdit.toPlainText())
            except:
                params.thresholdStep = 3.5

            params.filterByColor = True
            # params.blobColor = 0
            try:
                params.blobColor = float(self.textEdit_5.toPlainText())
            except:
                params.blobColor = 0

            params.filterByArea = True
            try:
                params.minArea = float(self.textEdit_6.toPlainText())
            except:
                params.minArea = 2
            try:
                params.maxArea = float(self.textEdit_7.toPlainText())
            except:
                params.maxArea = 100

            params.filterByCircularity = True
            try:
                params.minCircularity = float(self.textEdit_3.toPlainText())
            except:
                params.minCircularity = 0.3

            params.filterByConvexity = True
            try:
                params.minConvexity = float(self.textEdit_2.toPlainText())
            except:
                params.minConvexity = 0.6

            params.filterByInertia = True
            try:
                params.minInertiaRatio = float(self.textEdit_4.toPlainText())
            except:
                params.minInertiaRatio = 0.6

            detector = cv2.SimpleBlobDetector_create(params)
            keypoints = detector.detect(gauss)

            im_with_keypoints = cv2.drawKeypoints(res, keypoints, np.array([]), (0, 0, 255),
                                                  cv2.DRAW_MATCHES_FLAGS_DRAW_RICH_KEYPOINTS)

            x_coordinate = []
            for (x, y) in keypoints[0].convert(keypoints):
                x_coordinate.append(x)

            x_coordinate.sort()
            print("共检测出%d个斑点" % len(x_coordinate))
            cv2.imwrite(os.path.dirname(openfile_name) + '/tmp.jpg', im_with_keypoints)
            self.label_2.setPixmap(QPixmap(os.path.dirname(openfile_name) + '/tmp.jpg'))
            self.label_2.setScaledContents(True)

            ######################################################### 分界线
            img = cv2.imread(openfile_name)
            res = cv2.resize(img, (500, 500), interpolation=cv2.INTER_CUBIC)
            res = cv2.GaussianBlur(res, (3, 3), 0)
            gray = cv2.cvtColor(res, cv2.COLOR_BGR2GRAY)
            edges = cv2.Canny(gray, 50, 150, apertureSize=3)
            lines = cv2.HoughLines(edges, 1, np.pi / 180, 110)

            x = []
            for line in lines:
                rho = line[0][0]
                theta = line[0][1]
                a = np.cos(theta)
                b = np.sin(theta)
                x0 = a * rho
                y0 = b * rho
                x1 = int(x0 + 1000 * (-b))
                y1 = int(y0 + 1000 * (a))
                x2 = int(x0 - 1000 * (-b))
                y2 = int(y0 - 1000 * (a))
                x.append(str((x1 + x2) / 2))


            x_sort = x[:]
            x_sort.sort(key=float)
            x_sort = list(map(float, x_sort))

            array_x = np.array(x_sort).reshape(-1, 1)

            try:
                n_clusters = int(self.textEdit_8.toPlainText())
            except:
                n_clusters = 1

            if n_clusters == 1:
                km = KMeans(n_clusters=1, max_iter=1000).fit(array_x)
                y = KMeans(n_clusters=1, max_iter=1000).fit_predict(array_x)  # 会得出每个sample属于哪一类
            else:
                km = KMeans(n_clusters=n_clusters-1, max_iter=1000).fit(array_x)
                y = KMeans(n_clusters=n_clusters-1, max_iter=1000).fit_predict(array_x)  # 会得出每个sample属于哪一类

            dic = {}
            count = 0
            for i in y:
                if i not in dic.keys():
                    dic[i] = []
                    dic[i].append(array_x[count][0])
                    count += 1
                elif i in dic.keys():
                    dic[i].append(array_x[count][0])
                    count += 1

            cutoff = []
            for i in dic:
                cutoff.append(np.median(dic[i]))

            dic_num = {}
            print(x_coordinate)
            for i in range(0, len(dic) + 1):
                dic_num[i] = []

            print(cutoff)
            for ele in x_coordinate:
                if ele < cutoff[0]:
                    dic_num[0].append(ele)
                elif ele >= cutoff[len(cutoff)-1]:
                    dic_num[len(cutoff)].append(ele)
                else:
                    for num in range(1, len(cutoff)):
                        if cutoff[num - 1] <= ele < cutoff[num]:
                            dic_num[num].append(ele)
            print(dic_num)
            line = ''
            for key in dic_num:
                line = line + str(int(key) + 1) +": dots number is " + str(len(dic_num[key])) + '\n'

            print(line)
            QMessageBox.information(self, "Dots", line,
                                    QMessageBox.Yes | QMessageBox.No, QMessageBox.Yes)

        except:
            QMessageBox.critical(self, "Critical", "Please adjust the resolution or add your figure!",
                                 QMessageBox.Yes | QMessageBox.No,
                                 QMessageBox.Yes)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Dots_counting_V2_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())

