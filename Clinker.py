# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Clinker.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys,os
import time
import glob
import subprocess
from PyQt5.QtWebEngineWidgets import QWebEngineView
from PyQt5 import QtCore, QtGui, QtWidgets, Qt
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from Bio import SeqIO
import psutil


class MainWindow(QMainWindow):
    def __init__(self,content):
        super().__init__()
        self.setWindowTitle('Clinker plot')
        self.showMaximized()

        #####放入WebEngineView
        self.webview = WebEngineView()
        self.webview.load(QUrl(content))
        self.setCentralWidget(self.webview)

class WebEngineView(QWebEngineView):
    windowList = []
    # 重写createwindow()
    def createWindow(self, QWebEnginePage_WebWindowType):
        new_webview = WebEngineView()
        new_window = MainWindow()
        new_window.setCentralWidget(new_webview)
        #new_window.show()
        self.windowList.append(new_window)  #注：没有这句会崩溃
        return new_webview

class WorkThread(QThread):
    # 自定义信号对象
    trigger = pyqtSignal(str)

    def __int__(self):
        # 初始化函数
        super(WorkThread, self).__init__()

    def run(self):
        myobj = subprocess.Popen(r".\tools\clinker\clinker.exe %s -o %s -p %s" %
                                 (gbk_path,
                                  out,
                                  html))

        myobj.communicate()
        time.sleep(3)

        self.trigger.emit('Finished!!!')

class Clinker_Form(QWidget):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.work = WorkThread()

    def setupUi(self, Clustal):
        Clustal.setObjectName("Clustal")
        Clustal.resize(702, 467)
        Clustal.setStyleSheet("background-image: url(D:/Documents/Desktop/bb.png)")
        self.label = QtWidgets.QLabel(Clustal)
        self.label.setGeometry(QtCore.QRect(290, 10, 141, 41))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(19)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(Clustal)
        self.label_2.setGeometry(QtCore.QRect(60, 60, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(15)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_2.setObjectName("label_2")
        self.textBrowser_2 = QtWidgets.QTextBrowser(Clustal)
        self.textBrowser_2.setGeometry(QtCore.QRect(60, 100, 341, 31))
        self.textBrowser_2.setStyleSheet("background-image: url(D:/Documents/Desktop/white.png)")
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.label_3 = QtWidgets.QLabel(Clustal)
        self.label_3.setGeometry(QtCore.QRect(60, 200, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(15)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.textBrowser_3 = QtWidgets.QTextBrowser(Clustal)
        self.textBrowser_3.setGeometry(QtCore.QRect(60, 240, 341, 31))
        self.textBrowser_3.setStyleSheet("background-image: url(D:/Documents/Desktop/white.png)")
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.pushButton_2 = QtWidgets.QPushButton(Clustal)
        self.pushButton_2.setGeometry(QtCore.QRect(60, 140, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(13)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(Clustal)
        self.pushButton_3.setGeometry(QtCore.QRect(60, 280, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(13)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        self.textBrowser = QtWidgets.QTextBrowser(Clustal)
        self.textBrowser.setGeometry(QtCore.QRect(450, 100, 221, 141))
        self.textBrowser.setStyleSheet("background-image: url(D:/Documents/Desktop/white.png)")
        self.textBrowser.setObjectName("textBrowser")
        self.label_4 = QtWidgets.QLabel(Clustal)
        self.label_4.setGeometry(QtCore.QRect(480, 60, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(19)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.pushButton = QtWidgets.QPushButton(Clustal)
        self.pushButton.setGeometry(QtCore.QRect(580, 380, 81, 41))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(22)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-image: url(D:/Documents/Desktop/white.png)")
        self.pushButton.setObjectName("pushButton")
        self.label_5 = QtWidgets.QLabel(Clustal)
        self.label_5.setGeometry(QtCore.QRect(450, 260, 141, 41))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(15)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.pushButton_4 = QtWidgets.QPushButton(Clustal)
        self.pushButton_4.setGeometry(QtCore.QRect(450, 300, 221, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(15)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setStyleSheet("background-image: url(D:/Documents/Desktop/white.png)")
        self.pushButton_4.setObjectName("pushButton_4")
        self.label_6 = QtWidgets.QLabel(Clustal)
        self.label_6.setGeometry(QtCore.QRect(60, 330, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(15)
        self.label_6.setFont(font)
        self.label_6.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_6.setObjectName("label_6")
        self.textBrowser_4 = QtWidgets.QTextBrowser(Clustal)
        self.textBrowser_4.setGeometry(QtCore.QRect(60, 370, 341, 31))
        self.textBrowser_4.setStyleSheet("background-image: url(D:/Documents/Desktop/white.png)")
        self.textBrowser_4.setObjectName("textBrowser_4")
        self.pushButton_5 = QtWidgets.QPushButton(Clustal)
        self.pushButton_5.setGeometry(QtCore.QRect(60, 410, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(13)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setObjectName("pushButton_5")

        self.retranslateUi(Clustal)
        QtCore.QMetaObject.connectSlotsByName(Clustal)

        # button action
        self.pushButton.clicked.connect(self.calculation)
        self.pushButton_2.clicked.connect(self.read_file1)
        self.pushButton_3.clicked.connect(self.read_file2)
        self.pushButton_4.clicked.connect(self.editing)
        self.pushButton_5.clicked.connect(self.read_file3)

    def retranslateUi(self, Clustal):
        _translate = QtCore.QCoreApplication.translate
        Clustal.setWindowTitle(_translate("Clustal", "Clinker"))
        self.label.setText(_translate("Clustal", "Clinker"))
        self.label_2.setText(_translate("Clustal", "Input GBK file"))
        self.label_3.setText(_translate("Clustal", "Output alignment file"))
        self.pushButton_2.setText(_translate("Clustal", "Choose"))
        self.pushButton_3.setText(_translate("Clustal", "Choose"))
        self.label_4.setText(_translate("Clustal", "Status"))
        self.pushButton.setText(_translate("Clustal", "Run"))
        self.label_5.setText(_translate("Clustal", "Online editing"))
        self.pushButton_4.setText(_translate("Clustal", "Editing"))
        self.label_6.setText(_translate("Clustal", "Output html file"))
        self.pushButton_5.setText(_translate("Clustal", "Choose"))

    def read_file1(self):
        openfile_name = QtWidgets.QFileDialog.getExistingDirectory(self, 'choose file', '')
        print(openfile_name)
        self.textBrowser_2.setText(openfile_name)


    def read_file2(self):
        openfile_name = QtWidgets.QFileDialog.getSaveFileName(self, "choose file", "./")[0]
        print(openfile_name)
        self.textBrowser_3.setText(openfile_name)

    def read_file3(self):
        openfile_name = QtWidgets.QFileDialog.getSaveFileName(self, "choose file", "./")[0]
        print(openfile_name)
        self.textBrowser_4.setText(openfile_name)


    def read_file4(self):
        openfile_name = QtWidgets.QFileDialog.getSaveFileName(self, "choose file", "./")[0]
        print(openfile_name)
        self.textBrowser_4.setText(openfile_name)

    def finished(self, str):
        self.textBrowser.setText(str)


    def calculation(self):
        try:
            global gbk, gbk_path
            global out
            global html

            gbk = self.textBrowser_2.toPlainText()
            out = self.textBrowser_3.toPlainText()
            html = self.textBrowser_4.toPlainText()
            path = os.path.dirname(out)

            if any([len(gbk), len(out)]) == False:
                QMessageBox.warning(self, "warning", "Please add correct file path!", QMessageBox.Cancel)
            else:
                self.textBrowser.setText('Running! please wait')
                QApplication.processEvents()  # 逐条打印状态

                gbk = glob.glob(gbk + '/*gbk')
                gbk_path = ' '.join(gbk)
                print(gbk_path)

                # 启动线程, 运行 run 函数
                self.work.start()
                # 传送信号, 接受 run 函数执行完毕后的信号
                self.work.trigger.connect(self.finished)

        except:
            QMessageBox.critical(self, "error", "Check fasta file format!")


    def editing(self):
        try:
            content = self.textBrowser_4.toPlainText()
            print(content)
            if os.path.exists(content):
                self.winTable = MainWindow(content)
                self.winTable.show()
            else:
                QMessageBox.critical(self, "error", "Please run program first!!!")
        except:
            QMessageBox.critical(self, "error", "Please run program first!!!")


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Clustal = QtWidgets.QWidget()
    ui = Clinker_Form()
    ui.setupUi(Clustal)
    Clustal.show()
    sys.exit(app.exec_())
